REPORT 509 MESSAGE-ID zsd.
************************************************************************
* Description  : 客戶資料列印
************************************************************************
INCLUDE zrsdsd509top.
INCLUDE zrsdsd509f98.
***********************************************************************
* INITIALIZATION
***********************************************************************
INITIALIZATION.
    "Default Value used user-id
    SELECT bname parid parva FROM usr05 INTO CORRESPONDING FIELDS OF TABLE t_usr05
      WHERE bname = sy-uname.
    READ TABLE t_usr05 INTO wa_usr05 WITH KEY parid = 'VKO'.
    p_vkorg = wa_usr05-parva.

    READ TABLE t_usr05 INTO wa_usr05 WITH KEY parid = 'SPA'.
    IF wa_usr05-parva IS NOT INITIAL.
        s_spart-low = wa_usr05-parva.
        APPEND s_spart.
    ENDIF.
***********************************************************************
*AT SELECTION SCREEN
***********************************************************************
AT SELECTION-SCREEN.
***********************************************************************
* Start-of-selection PAUL
***********************************************************************
START-OF-SELECTION.
    PERFORM read_data.
***********************************************************************
* End-of-selection PAUL
***********************************************************************
END-OF-SELECTION.
    IF t_main[] IS INITIAL.
        MESSAGE s999.
    ELSE.
      IF t_detail IS INITIAL.
          MESSAGE s999.
      ELSE.
          IF p_chk = 'X'.
            PERFORM print_data_chk.
          ELSEIF p_chked = 'X'.
              PERFORM print_data_chked.
          ELSE.
              PERFORM print_data_all.
          ENDIF.
      ENDIF.
    ENDIF.
*&---------------------------------------------------------------------*
*& Form read_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM read_data .
    "Description
    SELECT bukrs butxt INTO CORRESPONDING FIELDS OF TABLE t_t001 FROM t001 WHERE spras = sy-langu.
    SELECT addrnumber remark INTO CORRESPONDING FIELDS OF TABLE t_adrct FROM adrct
      WHERE langu = sy-langu.
    SELECT addrnumber smtp_addr INTO CORRESPONDING FIELDS OF TABLE t_adr6 FROM adr6.
    SELECT addrnumber city1 street post_code1 INTO CORRESPONDING FIELDS OF TABLE t_adrc FROM adrc
      WHERE langu = sy-langu.
    SELECT zterm text1 INTO CORRESPONDING FIELDS OF TABLE t_t052u FROM t052u
      WHERE spras = sy-langu.
    SELECT addrnumber tel_number r3_user INTO CORRESPONDING FIELDS OF TABLE t_adr2 FROM adr2.
    SELECT kvgr1 bezei INTO CORRESPONDING FIELDS OF TABLE t_tvv1t FROM tvv1t
      WHERE spras = sy-langu.
    SELECT kvgr2 bezei INTO CORRESPONDING FIELDS OF TABLE t_tvv2t FROM tvv2t
      WHERE spras = sy-langu.
    SELECT kvgr3 bezei INTO CORRESPONDING FIELDS OF TABLE t_tvv3t FROM tvv3t
      WHERE spras = sy-langu.
    SELECT taxkd vtext INTO CORRESPONDING FIELDS OF TABLE t_tskdt FROM tskdt
      WHERE spras = sy-langu.
    "Credit Segment
    SELECT c~partner c~credit_sgmnt c~credit_limit s~credit_sgmnt_txt INTO CORRESPONDING FIELDS OF TABLE t_credit
      FROM ukmbp_cms_sgm AS c
      JOIN ukmcred_sgm0t AS s
      ON c~credit_sgmnt = s~credit_sgmnt
      WHERE langu = sy-langu.
    "Catch Feature Value
    SELECT a~objek a~atinn b~atnam a~atwrt a~dec_value_from INTO CORRESPONDING FIELDS OF TABLE t_ausp
      FROM ausp AS a
      JOIN cabn AS b
      ON a~atinn = b~atinn.
    SELECT w~atinn w~atwtb INTO CORRESPONDING FIELDS OF TABLE t_cawnt
      FROM cawnt AS w
      JOIN cabn AS b
      ON w~atinn = b~atinn.

    "Company
    SELECT vkorg bukrs INTO CORRESPONDING FIELDS OF TABLE t_tvko
      FROM tvko WHERE vkorg = p_vkorg.

    "Cathc Partner
    SELECT p~kunnr p~parvw p~defpa a~name1 a~stras INTO CORRESPONDING FIELDS OF TABLE t_knvp
      FROM knvp AS p
      JOIN kna1 AS a
      ON p~kunnr = a~kunnr.

    "T_MAIN
    SELECT a~kunnr a~mcod1 a~ktokd a~telfx a~pstlz a~land1 a~stcd1 a~stcd2 a~katr1 a~adrnr
      INTO CORRESPONDING FIELDS OF TABLE t_main
      FROM kna1 AS a
      JOIN knvv AS v ON a~kunnr = v~kunnr
      WHERE a~kunnr IN s_kunnr
      AND v~spart IN s_spart
      AND v~vkorg = p_vkorg.
    "T_DETAIL
    SELECT kunnr vkorg spart bzirk kdgrp vkbur waers kurst kalks vwerk vsbed podkz kztlf inco1
           zterm ktgrd kvgr1 kvgr2 kvgr3 kvgr4 kvgr5 zz1_sdpay_csa zz1_sqacday1_csa zz1_sqacday2_csa
           zz1_sqacday3_csa zz1_invday_csa zz1_psprice_csa zz1_forage_csa zz1_trssale_csa
      INTO CORRESPONDING FIELDS OF TABLE t_detail
      FROM knvv
      WHERE vkorg = p_vkorg
      AND spart IN s_spart
      AND kunnr IN s_kunnr.

    IF t_main IS NOT INITIAL.
        SELECT kunnr confs INTO CORRESPONDING FIELDS OF TABLE t_knb1
          FROM knb1
          FOR ALL ENTRIES IN t_main
          WHERE kunnr = t_main-kunnr.
    ENDIF.

    IF t_main IS NOT INITIAL.
        SELECT kunnr name1 name2 stras INTO CORRESPONDING FIELDS OF TABLE t_kna1
          FROM kna1
          FOR ALL ENTRIES IN t_main
          WHERE kunnr = t_main-kunnr.
    ENDIF.
    IF t_main IS NOT INITIAL .
        SELECT ktokd txt30 INTO CORRESPONDING FIELDS OF TABLE t_t077x
          FROM t077x
          FOR ALL ENTRIES IN t_main
          WHERE ktokd = t_main-ktokd AND spras = sy-langu.
    ENDIF.

    IF t_detail IS NOT INITIAL.
        SELECT taxkd kunnr INTO CORRESPONDING FIELDS OF TABLE t_knvi
          FROM knvi
          FOR ALL ENTRIES IN t_detail
          WHERE kunnr = t_detail-kunnr.
    ENDIF.

    PERFORM get_desc.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_desc
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_desc .
    CLEAR wa_main.
    LOOP AT t_main INTO wa_main.
        CLEAR: wa_detail ,w_num, w_all.
        LOOP AT t_detail INTO wa_detail WHERE kunnr = wa_main-kunnr.
            w_all = w_all + 1.
        ENDLOOP.
        wa_main-page = w_all.
        MODIFY t_main FROM wa_main.
        CLEAR wa_main.
    ENDLOOP.

    CLEAR wa_ausp.
    LOOP AT t_ausp INTO wa_ausp.
        READ TABLE t_cawnt INTO wa_cawnt WITH KEY atinn = wa_ausp-atinn.
        wa_ausp-atwtb = wa_cawnt-atwtb.
        MODIFY t_ausp FROM wa_ausp.
    ENDLOOP.

    CLEAR wa_main.
    LOOP AT t_main INTO wa_main.
        wa_main-print_date = sy-datum.
        CLEAR wa_adrct.
        READ TABLE t_adrct INTO wa_adrct WITH KEY addrnumber = wa_main-adrnr.
        wa_main-remark = wa_adrct-remark.

        CLEAR wa_adr6.
        READ TABLE t_adr6 INTO wa_adr6 WITH KEY addrnumber = wa_main-adrnr.
        wa_main-smtp_addr = wa_adr6-smtp_addr.

        CLEAR wa_adrc.
        READ TABLE t_adrc INTO wa_adrc WITH KEY addrnumber = wa_main-adrnr.
        CONCATENATE wa_adrc-post_code1 wa_adrc-city1 wa_adrc-street INTO wa_main-street.

        CLEAR wa_adr2.
        READ TABLE t_adr2 INTO wa_adr2 WITH KEY addrnumber = wa_main-adrnr r3_user = '3'.
        wa_main-tel_number2 = wa_adr2-tel_number.

        CLEAR wa_adr2.
        READ TABLE t_adr2 INTO wa_adr2 WITH KEY addrnumber = wa_main-adrnr r3_user = '1'.
        wa_main-tel_number1 = wa_adr2-tel_number.

        CLEAR wa_kna1.
        READ TABLE t_kna1 INTO wa_kna1 WITH KEY kunnr = wa_main-kunnr.
        CONCATENATE wa_kna1-name1 wa_kna1-name2 INTO wa_main-name SEPARATED BY space.

        CLEAR wa_t077x.
        READ TABLE t_t077x INTO wa_t077x WITH KEY ktokd = wa_main-ktokd.
        wa_main-txt30 = wa_t077x-txt30.

        CLEAR wa_knb1.
        READ TABLE t_knb1 INTO wa_knb1 WITH KEY kunnr = wa_main-kunnr.
        wa_main-confs = wa_knb1-confs.


        CLEAR wa_tvko.
        READ TABLE t_tvko INTO wa_tvko WITH KEY vkorg = p_vkorg.
        CLEAR wa_t001.
        READ TABLE t_t001 INTO wa_t001 WITH KEY bukrs = wa_tvko-bukrs.
        wa_main-butxt = wa_t001-butxt.

        CLEAR wa_ausp.
        LOOP AT t_ausp INTO wa_ausp WHERE objek = wa_main-kunnr.
            CASE wa_ausp-atnam.
              WHEN 'Z_BP_01_01'.
                  wa_main-atwrt = wa_ausp-atwrt.
              WHEN 'Z_BP_01_04'.
                  wa_main-atwrt2 = wa_ausp-atwrt.
              WHEN 'Z_BP_01_02'.
                  wa_main-atwrt4 = wa_ausp-atwrt.
              WHEN 'Z_BP_01_03'.
                  wa_main-atwrt3 = wa_ausp-atwrt.
              WHEN 'Z_SD_BP_FS_03'.
                  wa_main-limit = wa_ausp-dec_value_from.
              WHEN 'Z_SD_BP_FS_02'.
                  wa_main-atwrt6 = wa_ausp-atwrt.
              WHEN 'Z_SD_BP_FS_04'.
                  wa_main-atwrt7 = wa_ausp-atwrt.
              WHEN 'Z_SD_BP_FS_05'.
                  wa_main-atwrt8 = wa_ausp-atwrt.
              WHEN 'Z_SD_BP_FS_01'.
                  wa_main-atwtb = wa_ausp-atwtb.
              WHEN 'Z_SD_BP_FSN_01'.
                  wa_main-atwtb2 = wa_ausp-atwtb.
              WHEN 'Z_SD_BP_FSN_02'.
                  wa_main-atwtb3 = wa_ausp-atwtb.
              WHEN 'Z_SD_BP_FSN_03'.
                  wa_main-atwtb4 = wa_ausp-atwtb.
              WHEN OTHERS.
            ENDCASE.
        ENDLOOP.

        IF wa_main-page = 0.
            wa_main-page = 1.
        ENDIF.


        MODIFY t_main FROM wa_main.
    ENDLOOP.

    CLEAR wa_detail.
    LOOP AT t_detail INTO wa_detail.

        "Tax Classification
        CLEAR wa_knvi.
        READ TABLE t_knvi INTO wa_knvi WITH KEY kunnr = wa_detail-kunnr.
        wa_detail-taxkd = wa_knvi-taxkd.
        READ TABLE t_tskdt INTO wa_tskdt WITH KEY taxkd = wa_detail-taxkd.
        wa_detail-vtext = wa_tskdt-vtext.

        READ TABLE t_kna1 INTO wa_kna1 WITH KEY kunnr = wa_detail-kunnr.
        wa_detail-stras = wa_kna1-stras.

        "Payment Condition Description
        CLEAR wa_t052u.
        READ TABLE t_t052u INTO wa_t052u WITH KEY zterm = wa_detail-zterm.
        wa_detail-text1 = wa_t052u-text1.

        CLEAR wa_tvv1t.
        READ TABLE t_tvv1t INTO wa_tvv1t WITH KEY kvgr1 = wa_detail-kvgr1.
        wa_detail-bezei1 = wa_tvv1t-bezei.

        CLEAR wa_tvv2t.
        READ TABLE t_tvv2t INTO wa_tvv2t WITH KEY kvgr2 = wa_detail-kvgr2.
        wa_detail-bezei2 = wa_tvv2t-bezei.

        CLEAR wa_tvv3t.
        READ TABLE t_tvv3t INTO wa_tvv3t WITH KEY kvgr3 = wa_detail-kvgr3.
        wa_detail-bezei3 = wa_tvv3t-bezei.

        "Credit Segment
        CLEAR wa_credit.
        READ TABLE t_credit INTO wa_credit WITH KEY partner = wa_detail-kunnr.
         wa_detail-credit_limit = wa_credit-credit_limit * 100.


         wa_detail-credit_sgmnt = wa_credit-credit_sgmnt_txt.
        "代號加名稱
*        IF wa_detail-vkorg = 'T110'.
*            CONCATENATE wa_credit-credit_sgmnt+2(2) wa_credit-credit_sgmnt_txt INTO wa_detail-credit_sgmnt SEPARATED BY space.
*        ELSE.
*            CONCATENATE wa_detail-spart wa_credit-credit_sgmnt_txt INTO wa_detail-credit_sgmnt SEPARATED BY space.
*        ENDIF.

        SORT t_knvp BY kunnr.
        CLEAR: wa_knvp, w_name1, w_stras.
        LOOP AT t_knvp INTO wa_knvp WHERE kunnr = wa_detail-kunnr AND parvw = 'AF'.
            IF w_name1 IS INITIAL.
                w_name1 = wa_knvp-name1.
            ENDIF.
            IF wa_knvp-defpa = 'X'.
                wa_detail-sales = wa_knvp-name1.
            ENDIF.
        ENDLOOP.
        IF wa_detail-sales IS INITIAL.
            wa_detail-sales = w_name1.
        ENDIF.

        CLEAR: wa_knvp, w_name1, w_stras.
        LOOP AT t_knvp INTO wa_knvp WHERE kunnr = wa_detail-kunnr AND parvw = 'WE'.
            IF w_name1 IS INITIAL.
                w_name1 = wa_knvp-name1.
            ENDIF.
            IF w_stras IS INITIAL.
                w_stras = wa_knvp-stras.
            ENDIF.
            IF wa_knvp-defpa = 'X'.
                wa_detail-name11 = wa_knvp-name1.
                wa_detail-stras1 = wa_knvp-stras.
            ENDIF.
        ENDLOOP.
        IF wa_detail-name11 IS INITIAL.
            wa_detail-name11 = w_name1.
            wa_detail-stras1 = w_stras.
        ENDIF.

        CLEAR: wa_knvp, w_name1, w_stras.
        LOOP AT t_knvp INTO wa_knvp WHERE kunnr = wa_detail-kunnr AND parvw = 'RG'.
            IF w_name1 IS INITIAL.
                w_name1 = wa_knvp-name1.
            ENDIF.
            IF w_stras IS INITIAL.
                w_stras = wa_knvp-stras.
            ENDIF.
            IF wa_knvp-defpa = 'X'.
                wa_detail-name12 = wa_knvp-name1.
                wa_detail-stras2 = wa_knvp-stras.
            ENDIF.
        ENDLOOP.
        IF wa_detail-name12 IS INITIAL.
            wa_detail-name12 = w_name1.
            wa_detail-stras2 = w_stras.
        ENDIF.

        CLEAR: wa_knvp, w_name1, w_stras.
        LOOP AT t_knvp INTO wa_knvp WHERE kunnr = wa_detail-kunnr AND parvw = 'RE'.
            IF w_name1 IS INITIAL.
                w_name1 = wa_knvp-name1.
            ENDIF.
            IF w_stras IS INITIAL.
                w_stras = wa_knvp-stras.
            ENDIF.
            IF wa_knvp-defpa = 'X'.
                wa_detail-name13 = wa_knvp-name1.
                wa_detail-stras3 = wa_knvp-stras.
            ENDIF.
        ENDLOOP.
        IF wa_detail-name13 IS INITIAL.
            wa_detail-name13 = w_name1.
            wa_detail-stras3 = w_stras.
        ENDIF.

        MODIFY t_detail FROM wa_detail.
        CLEAR wa_detail.
    ENDLOOP.
ENDFORM.
